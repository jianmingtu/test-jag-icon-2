# This is a basic workflow to help you get started with Actions
name: CodeClimate Workflow

# Triggers that controls when the workflow will run
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    env:
      FILE_COUNTER: 0
      CC_TEST_REPORTER_ID: 97c6e3183ecb449b1226b61df8d2022d9c6b53cac285aa273655a7efc5b62a0d
      BASIC_AUTH_USER: ${{ secrets.BASIC_AUTH_USER }}
      BASIC_AUTH_PASS: ${{ secrets.BASIC_AUTH_PASS }}
      ACTION_DEBUG: true

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Git Checkout
        uses: actions/checkout@v3

      # Set up JDK build environment
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # Get Code Climate binary
      - name: Download Code Climate Binary
        run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      # Permissions applied to the Code Climate Executable
      - name: Apply executable perms to Code Climate Binary
        run: chmod +x ./cc-test-reporter

      # Before build
      - name: Before build
        run: ./cc-test-reporter before-build

      # Set required Git env vars for either pull request
      - name: Set ENV for codeclimate (pull_request)
        run: |
          echo "GIT_BRANCH=${{ github.event.pull_request.head.ref }}" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          #echo "::set-env name=GIT_BRANCH::${{ github.event.pull_request.head.ref }}"
          #echo "::set-env name=GIT_COMMIT_SHA::${{ github.event.pull_request.head.sha }}"
        if: github.event_name == 'pull_request'

      # Set required Git env vars for a push to main
      - name: Set ENV for codeclimate (push)
        run: |
          echo "GIT_BRANCH=$GITHUB_REF" >> $GITHUB_ENV
          echo "GIT_COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
          #echo "::set-env name=GIT_BRANCH::$GITHUB_REF"
          #echo "::set-env name=GIT_COMMIT_SHA::$GITHUB_SHA"
        if: github.event_name == 'push'

      # Trimming the ref to main in order to publish correct report
      - name: Set ref/head/main to main
        run: |
          echo "GIT_BRANCH=master" >> $GITHUB_ENV
          #echo "::set-env name=GIT_BRANCH::main"
        if: env.GIT_BRANCH == 'refs/heads/main'

      - name: Check Code Style
        run: mvn -ntp spotless:check

      - name: Generate Code Coverage
        run: mvn -ntp verify

      - name: Fix Jacoco Report Format for CC
        run: sed -e 's/<[\/]\?group[^>]*>//g' icon2-code-coverage/target/site/jacoco-aggregate/jacoco.xml > icon2-code-coverage/target/site/jacoco-aggregate/jacoco-codeclimatecompat.xml

        # Formatting the Code Coverage Report
      - name: Format the coverage report
        run: JACOCO_SOURCE_PATH="jag-icon2-biometrics-application/src/main/java icon2-common-models/target/generated-sources/xjc icon2-hsr-models/target/generated-sources/xjc jag-icon2-common-application/src/main/java jag-icon2-auth-application/src/main/java jag-icon2-myfiles-application/src/main/java jag-icon2-hsr-application/src/main/java" ./cc-test-reporter format-coverage icon2-code-coverage/target/site/jacoco-aggregate/jacoco-codeclimatecompat.xml --input-type jacoco -o ./target/site/jacoco/codeclimate.json

# Upload JSON for debugging purposes
      - name: Upload JSON for debugging purposes
        uses: actions/upload-artifact@v3.1.1
        with:
          name: icon2-coverage-report
          path: ./target/site/jacoco/codeclimate.json

      # Upload total coverage report to Code Climate
      - name: Upload coverage report to Code Climate
        run: ./cc-test-reporter upload-coverage -i ./target/site/jacoco/codeclimate.json
